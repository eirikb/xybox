.row
  .span12
    :markdown
      XYBox is built on definitions called _defs_.
      It is a way to describe an item, such as a car, player, house, ball or brick wall.  
      The def define item _physics_, _graphics_ and _behavior_.
      Physics and graphics are defined in _JSON_ files, while the behavior and logic is defined in _JS_ files.
    h3 Items and graphics
    :markdown
      As an example we will try to make a ball with a _defs_ file.  
      First we need an image, like this one:  
      ![chrome logo](img/chrome.png)  
      _[(img/chrome.png)](img/chrome.png)_.  
      Then we can define this in a _defs_ file like this (_ball1.json_):
    .row
      .span6
        h5 Input
        pre.prettyprint
          include ../defs/ball1.json
      .span6
        h5 Output
        canvas#ball1

    :markdown
      Here _items_ indicate the items we want to draw.
      The _images_ in _graphics_ will be preloaded (only once pr src).

    p Run like this with JavaScript:
    pre.prettyprint game.init('ball1', 'defs/ball1.json');
    :markdown
      First argument, _ball1_, is _ID_ of canvas, and second argument is definition (_defs_) file.

    h3 Items and defs
    :markdown
      Now what if we would like to draw the same ball two times?  
      This is where we will use _defs_. Basically a _def_ will merge into items,
      so you only have can split the item definition from actual items.  
      This can be setup like this (_ball2.json):

    .row
      .span6
        h5 Input
        pre.prettyprint
          include ../defs/ball2.json
      .span6
        h5 Output
        canvas#ball2

    h3 Includes
    :markdown
      It could be preferable to move _defs_ out into a separate file or files.
      Then in the file with _items_ one add a property for _includes_,
      which will make sure that the _defs_ file is also merged.

    .row
      .span6
        h5 Input
        strong ball3-defs.json
        pre.prettyprint
          include ../defs/ball3-defs.json
        strong ball3.json
        pre.prettyprint
          include ../defs/ball3.json
      .span6
        h5 Output
        canvas#ball3
 
    h4 Code/JavaScript
    :markdown
      To add behavior and logic to the game JavaScript is used.  
      These files are linked through _code_ part, like this (_ball4.json_):

    .row
      .span6
        h5 Input
        strong ball4.json
        pre.prettyprint
          include ../defs/ball4.json
        strong ball4.js
        pre.prettyprint= js.ball4
      .span6
        h5 Output
        canvas#ball4

    :markdown
      The property consists of two parts separated with space.
      The first part is the actual JavaScript file, relative from _defs_ file location.
      The second part is an optional function which will be called when an item is created.
      First argument would be the actual item, the second is game object (if needed).  
